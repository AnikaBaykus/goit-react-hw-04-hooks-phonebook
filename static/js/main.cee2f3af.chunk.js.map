{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Notification/Notification.module.css","components/Section/Section.jsx","components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","components/App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","Container","container","ContactForm","options","useState","name","setName","number","setNumber","formNameId","uuidv4","formNumberId","form","onSubmit","event","preventDefault","label","htmlFor","input","id","type","pattern","required","value","onChange","currentTarget","placeholder","button","ContactList","contacts","onDeleteContact","ul","map","li","p","onClick","Filter","inputID","Notification","props","message","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","normalizedFilter","toLowerCase","visibleContact","contact","includes","alert","length","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,OAAS,8B,kBCAlID,EAAOC,QAAU,CAAC,GAAK,wBAAwB,GAAK,wBAAwB,EAAI,uBAAuB,OAAS,8B,kBCAhHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,gBCA7DD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,kBCAxDD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,gC,iLCgBbC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,iBCIQI,MARf,YAAkC,IAAbJ,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEG,UAAlB,SAA8BL,K,gBCAxB,SAASM,EAAYC,GAClC,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACMC,EAAaC,cACbC,EAAeD,cAsBrB,OACE,uBAAMb,UAAWC,IAAEc,KAAMC,SARN,SAAAC,GACnBA,EAAMC,iBAENZ,EAAQU,SAASR,EAAME,GAPvBD,EAAQ,IACRE,EAAU,KAWV,UACE,wBAAOX,UAAWC,IAAEkB,MAAOC,QAASR,EAApC,iBACO,IACL,uBACEZ,UAAWC,IAAEoB,MACbC,GAAIV,EACJW,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACR1B,MAAM,kcACN2B,UAAQ,EACRC,MAAOlB,EACPmB,SAjCiB,SAAAV,GACvBR,EAAQQ,EAAMW,cAAcF,QAiCtBG,YAAa,mBAIjB,wBAAO7B,UAAWC,IAAEkB,MAAOC,QAASN,EAApC,mBACS,IACP,uBACEd,UAAWC,IAAEoB,MACbC,GAAIR,EACJS,KAAK,MACLf,KAAK,SACLgB,QAAQ,yFACR1B,MAAM,giBACN2B,UAAQ,EACRC,MAAOhB,EACPiB,SA7CmB,SAAAV,GACzBN,EAAUM,EAAMW,cAAcF,QA6CxBG,YAAa,2BAIjB,wBAAQ7B,UAAWC,IAAE6B,OAAQP,KAAK,SAAlC,4B,oBC9BSQ,MA/Bf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC/B,OACE,oBAAIjC,UAAWC,IAAEiC,GAAjB,SACGF,EAASG,KAAI,gBAAGb,EAAH,EAAGA,GAAId,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,qBAAIV,UAAWC,IAAEmC,GAAjB,UACE,oBAAGpC,UAAWC,IAAEoC,EAAhB,UACG7B,EADH,KACWE,KACN,IACL,wBACEV,UAAWC,IAAE6B,OACbQ,QAAS,kBAAML,EAAgBX,IAC/BC,KAAK,SAHP,sBAJwBD,S,gBCsBnBiB,MAzBf,YAAsC,IAApBb,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACjBa,EAAU3B,cAEhB,OACE,8BACE,wBAAOb,UAAWC,IAAEkB,MAAOC,QAASoB,EAApC,kCACwB,IACtB,uBACExC,UAAWC,IAAEoB,MACbC,GAAIkB,EACJjB,KAAK,OACLG,MAAOA,EACPC,SAAUA,EACVE,YAAY,wB,iBCJPY,MAVf,SAAsBC,GACpB,IAAQC,EAAYD,EAAZC,QAER,OAAO,oBAAI3C,UAAWC,IAAE0C,QAAjB,SAA2BA,KCIrB,SAASC,IACtB,MAAgCrC,mBAAS,IAAzC,mBAAOyB,EAAP,KAAiBa,EAAjB,KACA,EAA4BtC,mBAAS,IAArC,mBAAOuC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMhB,EAAWiB,aAAaC,QAAQ,YAChCC,EAAiBC,KAAKC,MAAMrB,GAC9BmB,GACFN,EAAYM,KAEb,IAEHH,qBAAU,WACJhB,GACFiB,aAAaK,QAAQ,WAAYF,KAAKG,UAAUvB,OAIpD,IAwBMwB,EAAmBV,EAAOW,cAE1BC,EAAiB1B,EAASc,QAAO,SAAAa,GAAO,OAC5CA,EAAQnD,KAAKiD,cAAcG,SAASJ,MAOtC,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAS1D,MAAM,YAAf,SACE,cAACO,EAAD,CAAaW,SArCO,SAACR,EAAME,GAC/B,IAEMiD,EAAU,CACdnD,KAAMA,EACNE,OAAQA,EACRY,GALgBT,eAQMmB,EACrBG,KAAI,SAAAwB,GAAO,OAAIA,EAAQnD,KAAKiD,iBAC5BG,SAASpD,EAAKiD,eAGfI,MAAM,GAAD,OAAIrD,EAAJ,6BAELqC,EAAY,CAACc,GAAF,mBAAc3B,UAuBzB,cAAC,EAAD,CAASlC,MAAM,WAAf,SACGkC,EAAS8B,OAAS,EACjB,qCACE,cAAC,EAAD,CAAQpC,MAAOoB,EAAQnB,SAtBZ,SAAAV,GACnB8B,EAAU9B,EAAMW,cAAcF,UAsBtB,cAAC,EAAD,CACEM,SAAU0B,EACVzB,gBAfU,SAAA8B,GACpBlB,EAAYb,EAASc,QAAO,SAAAa,GAAO,OAAIA,EAAQrC,KAAOyC,YAkBhD,cAAC,EAAD,CAAcpB,QAAQ,qBCxEhCqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cee2f3af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__lfgVE\",\"label\":\"ContactForm_label__36iVy\",\"input\":\"ContactForm_input__2vBqc\",\"button\":\"ContactForm_button__23BhC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ul\":\"ContactList_ul__2bpFw\",\"li\":\"ContactList_li__1_MGA\",\"p\":\"ContactList_p__dDxBz\",\"button\":\"ContactList_button__g2w53\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1clhb\",\"title\":\"Section_title__2YMEn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2VyU7\",\"input\":\"Filter_input__2nQHc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2ydPJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1o7mf\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm(options) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const formNameId = uuidv4();\n  const formNumberId = uuidv4();\n\n  const handleChangeName = event => {\n    setName(event.currentTarget.value);\n  };\n\n  const handleChangeNumber = event => {\n    setNumber(event.currentTarget.value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    options.onSubmit(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor={formNameId}>\n        Name{' '}\n        <input\n          className={s.input}\n          id={formNameId}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChangeName}\n          placeholder={'Add name...'}\n        />\n      </label>\n\n      <label className={s.label} htmlFor={formNumberId}>\n        Number{' '}\n        <input\n          className={s.input}\n          id={formNumberId}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n          placeholder={'Add phone number...'}\n        />\n      </label>\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// class ContactForm extends Component {\n//   static defaultProps = {\n//     name: '',\n//     number: '',\n//   };\n\n//   state = {\n//     name: this.props.name,\n//     number: this.props.number,\n//   };\n\n//   formNameId = uuidv4();\n//   formNumberId = uuidv4();\n\n//   handleChange = event => {\n//     const { name, value } = event.currentTarget;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n\n//     this.props.onSubmit(this.state);\n//     this.resetForm();\n//   };\n\n//   resetForm = () => {\n//     this.setState({\n//       name: '',\n//       number: '',\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <form className={s.form} onSubmit={this.handleSubmit}>\n//         <label className={s.label} htmlFor={this.formNameId}>\n//           Name{' '}\n//           <input\n//             className={s.input}\n//             id={this.formNameId}\n//             type=\"text\"\n//             name=\"name\"\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//             required\n//             value={this.state.name}\n//             onChange={this.handleChange}\n//             placeholder={'Add name...'}\n//           />\n//         </label>\n\n//         <label className={s.label} htmlFor={this.formNumberId}>\n//           Number{' '}\n//           <input\n//             className={s.input}\n//             id={this.formNumberId}\n//             type=\"tel\"\n//             name=\"number\"\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n//             required\n//             value={this.state.number}\n//             onChange={this.handleChange}\n//             placeholder={'Add phone number...'}\n//           />\n//         </label>\n\n//         <button className={s.button} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// export default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <ul className={s.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={s.li} key={id}>\n          <p className={s.p}>\n            {name}: {number}\n          </p>{' '}\n          <button\n            className={s.button}\n            onClick={() => onDeleteContact(id)}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  const inputID = uuidv4();\n\n  return (\n    <div>\n      <label className={s.label} htmlFor={inputID}>\n        Find contacts by name{' '}\n        <input\n          className={s.input}\n          id={inputID}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          placeholder=\"Enter name...\"\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification(props) {\n  const { message } = props;\n\n  return <h3 className={s.message}>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport Section from './Section';\nimport { useState, useEffect } from 'react';\nimport Container from './Container';\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport Notification from './Notification';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  });\n\n  const submitFormHandler = (name, number) => {\n    const idContact = uuidv4();\n\n    const contact = {\n      name: name,\n      number: number,\n      id: idContact,\n    };\n\n    const findCopyContact = contacts\n      .map(contact => contact.name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    if (findCopyContact) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      setContacts([contact, ...contacts]);\n    }\n  };\n\n  const filterChange = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n\n  const visibleContact = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={submitFormHandler} />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <>\n            <Filter value={filter} onChange={filterChange}></Filter>\n            <ContactList\n              contacts={visibleContact}\n              onDeleteContact={deleteContact}\n            ></ContactList>\n          </>\n        ) : (\n          <Notification message=\"No contacts\"></Notification>\n        )}\n      </Section>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}